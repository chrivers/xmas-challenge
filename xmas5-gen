#!/usr/bin/python
import sys
from StringIO import StringIO
from whitespace import WhitespaceAssemblerParser, WhitespaceAssembler

parser = WhitespaceAssemblerParser()
asm = WhitespaceAssembler()

lines = [
    "my true love sent to me:",
    "Two Turtle Doves",
    "Three French Hens",
    "Four Calling Birds",
    "Five Golden Rings",
    "Six Geese a Laying",
    "Seven Swans a Swimming",
    "Eight Maids a Milking",
    "Nine Ladies Dancing",
    "Ten Lords a Leaping",
    "Eleven Pipers Piping",
    "12 Drummers Drumming",
]

def total_bit_width(string, offset):
    bits = 0
    for c in string:
        bits += len(bin(abs(ord(c) - offset))[2:].lstrip("0"))
    return bits

def best_offset(string):
    best = 0xFFFFFFFF
    index = None
    for x in range(0, 256):
        new = total_bit_width(string, x)
        if new < best:
            best = new
            index = x
    return index

asm.load_library("xmas5-ws/main.wsa")

for index, line in enumerate(lines):
    best = best_offset(line)
    asm.label("part%d" % (index+1))
    asm.push(ord('\n') - best)
    for char in reversed(line):
        asm.push(ord(char) - best)
    asm.push(len(line)+1)
    asm.push(best_offset(line))
    asm.call("write_buffer")
    asm.ret()

asm.load_library("xmas5-ws/headline.wsa")
asm.load_library("xmas5-ws/partridge.wsa")
asm.load_library("xmas5-ws/write_buffer.wsa")

sys.stdout.write(asm.get_result())
